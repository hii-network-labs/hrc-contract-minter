name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache Bun dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.bun/install/cache
          frontend/node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('frontend/package.json') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install frontend dependencies
      run: bun run install:frontend

    - name: Copy contract artifacts
      run: |
        if [ -d "../HRC-20" ]; then
          ./copy-contracts.sh
        else
          echo "⚠️  HRC-20 directory not found, skipping contract copy"
          echo "✅ Using existing contract files"
        fi

    - name: Type check
      run: bun run type-check

    - name: Lint (allow warnings)
      run: bun run lint || echo "Linting completed with warnings"

    - name: Format check
      run: cd frontend && bun run format:check

    - name: Build
      run: bun run build

    - name: Test build artifacts
      run: |
        if [ ! -d "frontend/dist" ]; then
          echo "Build failed: dist directory not found"
          exit 1
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: |
        bun install
        cd frontend && bun install

    - name: Copy contract artifacts
      run: ./copy-contracts.sh

    - name: Build
      run: bun run build